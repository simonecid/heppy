'''Applies scaling factors to jet rate plots to obtain rate plots for other objects
A plot containing the efficiency vs pt is needed in input, in a file.
'''

print "Dealing with imports"

from ROOT import TFile
from ROOT import TLatex
from ROOT import TLine
from ROOT import TH1F
from ROOT import TCanvas
from ROOT import TGraphErrors
from ROOT import TLegend
from ROOT import TMultiGraph
from ROOT import TPaveText

print "Loading stuff"

minBias_500kevents_ratePlots = TFile("minBias_500kevents/minBias_15_05_2017/ratePlots.root")
DelphesSim_ff_H_WW_enuenu_1000events_efficiency_file = TFile("DelphesSim_ff_H_WW_enuenu_1000events/METEfficiency/efficiency.root")
DelphesSim_ff_H_WW_munumunu_1000events_efficiency_file = TFile("DelphesSim_ff_H_WW_munumunu_1000events/METEfficiency/efficiency.root")
DelphesSim_ff_W_enu_1000events_efficiency_file = TFile("DelphesSim_ff_W_enu_1000events/METEfficiency/efficiency.root")
DelphesSim_ff_W_munu_1000events_efficiency_file = TFile("DelphesSim_ff_W_munu_1000events/METEfficiency/efficiency.root")

metEfficiencyFile = TFile("metTriggerEfficiencies.root", "RECREATE")

minBias_500kevents_ratePlots_jetTriggerRate = minBias_500kevents_ratePlots.Get("jetTriggerRate")
jetToMETRatePlot_Histo = minBias_500kevents_ratePlots.Get("jetToMETTriggerRate")

#jetToMETTriggerRate = TH1F(
#                           "jetToMETTriggerRate",
#                           "MET trigger rate from jets",
#                           minBias_500kevents_ratePlots_jetTriggerRate.GetNbinsX(),
#                           minBias_500kevents_ratePlots_jetTriggerRate.GetXaxis().GetXmin(),
#                           minBias_500kevents_ratePlots_jetTriggerRate.GetXaxis().GetXmax()
#                         )

jetToMETTriggerRate = TGraphErrors(jetToMETRatePlot_Histo)

canvas = TCanvas("canvas", "canvas", 1024, 1024)
canvas.SetGridx()
canvas.SetGridy()
canvas.SetLogy()

print "Building rate vs MET plot"

# Lumi and energy info
text = TPaveText(0.35, 0.84, 0.75, 0.9, "NDC")
text.AddText("L_{inst} = 5 #times 10^{34} cm^{-2} s^{-1}   #sqrt{s} = 100 TeV")

54771266.8299736
15435538.8339017
9161739.17883194
2492531.45749828
592722.804252886
304389.918404508
193864.453068518
176138.35157381
120598.118554004
91404.8139791472
75712.7399760663
58571.1
45729.6887359517
39702.9313562022

jetToMETTriggerRate.SetPointError(0, 5, 7071067)
jetToMETTriggerRate.SetPointError(1, 5, 54771266)
jetToMETTriggerRate.SetPointError(2, 5, 15435538)
jetToMETTriggerRate.SetPointError(3, 5, 9161739)
jetToMETTriggerRate.SetPointError(4, 5, 2492531)
jetToMETTriggerRate.SetPointError(5, 5, 592722)
jetToMETTriggerRate.SetPointError(6, 5, 304389)
jetToMETTriggerRate.SetPointError(7, 5, 193864)
jetToMETTriggerRate.SetPointError(8, 5, 176138)
jetToMETTriggerRate.SetPointError(9, 5, 120598)
jetToMETTriggerRate.SetPointError(10, 5, 91404)
jetToMETTriggerRate.SetPointError(11, 5, 75712)
jetToMETTriggerRate.SetPointError(12, 5, 58571)
jetToMETTriggerRate.SetPointError(13, 5, 45729)
jetToMETTriggerRate.SetPointError(14, 5, 39702)

jetToMETTriggerRate.Draw("AP")
jetToMETTriggerRate.SetMarkerColor(4)
jetToMETTriggerRate.SetLineColor(1)
jetToMETTriggerRate.SetMarkerStyle(21)
text.Draw()
canvas.Update()
canvas.Print("jetToMETTriggerRate.svg", "svg")
canvas.Print("jetToMETTriggerRate.png", "png")
canvas.Print("jetToMETTriggerRate.pdf", "pdf")

print "Retrieving efficiency vs MET plot"
print "Building efficiency vs rate plots"

canvas.SetLogx(0)
canvas.SetLogy(0)
text.SetX1NDC(0.5)
text.SetX2NDC(0.9)
metTriggerEfficiency_ff_H_WW_enuenu_1000events = DelphesSim_ff_H_WW_enuenu_1000events_efficiency_file.Get("metTriggerEfficiency_errors")
metTriggerEfficiency_ff_H_WW_enuenu_1000events.SetMarkerColor(4)
metTriggerEfficiency_ff_H_WW_enuenu_1000events.SetLineColor(1)
metTriggerEfficiency_ff_H_WW_enuenu_1000events.SetMarkerStyle(21)
metTriggerEfficiency_ff_H_WW_enuenu_1000events.Draw("AP")
metTriggerEfficiency_ff_H_WW_enuenu_1000events.GetXaxis().SetTitle("MET [GeV]")
metTriggerEfficiency_ff_H_WW_enuenu_1000events.GetXaxis().SetRangeUser(0, 150)
metTriggerEfficiency_ff_H_WW_enuenu_1000events.GetYaxis().SetTitle("% accepted events")
metTriggerEfficiency_ff_H_WW_enuenu_1000events.GetYaxis().SetTitleOffset(1.2)
metTriggerEfficiency_ff_H_WW_enuenu_1000events.GetYaxis().SetRangeUser(0, 1.1)
text.Draw()
canvas.Update()
canvas.Draw()
canvas.Print("metTriggerEfficiency_ff_H_WW_enuenu_1000events.svg", "svg")
canvas.Print("metTriggerEfficiency_ff_H_WW_enuenu_1000events.png", "png")
canvas.Print("metTriggerEfficiency_ff_H_WW_enuenu_1000events.pdf", "pdf")

label_200kHz = TLatex(220000, 0.9, "110 GeV - 200 kHz")
label_200kHz.SetTextSize(0.03)
line_200kHz = TLine(200000, 0, 200000, 1.1)
line_200kHz.SetLineColor(2)
line_200kHz.SetLineStyle(2)

canvas.SetLogx(1)
canvas.SetLogy(0)
text.SetX1NDC(0.12)
text.SetX2NDC(0.52)
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events = TGraphErrors(14)
for x in xrange(1, 15):
  efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.SetPoint(x - 1, jetToMETTriggerRate.GetY()[x], metTriggerEfficiency_ff_H_WW_enuenu_1000events.GetY()[x])
  efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.SetPointError(x - 1, jetToMETTriggerRate.GetEY()[x], metTriggerEfficiency_ff_H_WW_enuenu_1000events.GetEY()[x])
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.SetTitle("ff_H_WW_enuenu_1000events")
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.SetName("efficiencyPlotWithRate_ff_H_WW_enuenu_1000events")
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.GetYaxis().SetTitle("% accepted events")
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.GetYaxis().SetTitleOffset(1.2)
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.GetYaxis().SetRangeUser(0, 1.1)
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.SetMarkerColor(4)
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.SetLineColor(1)
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.SetMarkerStyle(21)
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.GetXaxis().SetTitle("Rate [Hz]")
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.GetXaxis().SetTitleOffset(1.2)
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.Draw("AP")
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.Write()
line_200kHz.Draw()
label_200kHz.Draw()
text.Draw()
canvas.Update()
canvas.Print("metEfficiencyPlotWithRate_ff_H_WW_enuenu_1000events.svg", "svg")
canvas.Print("metEfficiencyPlotWithRate_ff_H_WW_enuenu_1000events.png", "png")
canvas.Print("metEfficiencyPlotWithRate_ff_H_WW_enuenu_1000events.pdf", "pdf")

canvas.SetLogx(0)
canvas.SetLogy(0)
text.SetX1NDC(0.5)
text.SetX2NDC(0.9)
metTriggerEfficiency_ff_H_WW_munumunu_1000events = DelphesSim_ff_H_WW_munumunu_1000events_efficiency_file.Get("metTriggerEfficiency_errors")
metTriggerEfficiency_ff_H_WW_munumunu_1000events.SetMarkerColor(4)
metTriggerEfficiency_ff_H_WW_munumunu_1000events.SetLineColor(1)
metTriggerEfficiency_ff_H_WW_munumunu_1000events.SetMarkerStyle(21)
metTriggerEfficiency_ff_H_WW_munumunu_1000events.Draw("AP")
metTriggerEfficiency_ff_H_WW_munumunu_1000events.GetXaxis().SetTitle("MET [GeV]")
metTriggerEfficiency_ff_H_WW_munumunu_1000events.GetXaxis().SetRangeUser(0, 150)
metTriggerEfficiency_ff_H_WW_munumunu_1000events.GetYaxis().SetTitle("% accepted events")
metTriggerEfficiency_ff_H_WW_munumunu_1000events.GetYaxis().SetTitleOffset(1.2)
metTriggerEfficiency_ff_H_WW_munumunu_1000events.GetYaxis().SetRangeUser(0, 1.1)
text.Draw()
canvas.Update()
canvas.Draw()
canvas.Print("metTriggerEfficiency_ff_H_WW_munumunu_1000events.svg", "svg")
canvas.Print("metTriggerEfficiency_ff_H_WW_munumunu_1000events.png", "png")
canvas.Print("metTriggerEfficiency_ff_H_WW_munumunu_1000events.pdf", "pdf")

canvas.SetLogx(1)
canvas.SetLogy(0)
text.SetX1NDC(0.12)
text.SetX2NDC(0.52)
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events = TGraphErrors(14)
for x in xrange(1, 15):
  efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.SetPoint(x - 1, jetToMETTriggerRate.GetY()[x], metTriggerEfficiency_ff_H_WW_munumunu_1000events.GetY()[x])
  efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.SetPointError(x - 1, jetToMETTriggerRate.GetEY()[x], metTriggerEfficiency_ff_H_WW_munumunu_1000events.GetEY()[x])
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.SetTitle("ff_H_WW_munumunu_1000events")
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.SetName("efficiencyPlotWithRate_ff_H_WW_munumunu_1000events")
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.GetYaxis().SetTitle("% accepted events")
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.GetYaxis().SetTitleOffset(1.2)
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.GetYaxis().SetRangeUser(0, 1.1)
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.SetMarkerColor(4)
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.SetLineColor(1)
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.SetMarkerStyle(21)
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.GetXaxis().SetTitle("Rate [Hz]")
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.GetXaxis().SetTitleOffset(1.2)
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.Draw("AP")
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.Write()
line_200kHz.Draw()
label_200kHz.Draw()
text.Draw()
canvas.Update()
canvas.Print("metEfficiencyPlotWithRate_ff_H_WW_munumunu_1000events.svg", "svg")
canvas.Print("metEfficiencyPlotWithRate_ff_H_WW_munumunu_1000events.png", "png")
canvas.Print("metEfficiencyPlotWithRate_ff_H_WW_munumunu_1000events.pdf", "pdf")

canvas.SetLogx(0)
canvas.SetLogy(0)
text.SetX1NDC(0.5)
text.SetX2NDC(0.9)
metTriggerEfficiency_ff_W_enu_1000events = DelphesSim_ff_W_enu_1000events_efficiency_file.Get("metTriggerEfficiency_errors")
metTriggerEfficiency_ff_W_enu_1000events.SetMarkerColor(4)
metTriggerEfficiency_ff_W_enu_1000events.SetLineColor(1)
metTriggerEfficiency_ff_W_enu_1000events.SetMarkerStyle(21)
metTriggerEfficiency_ff_W_enu_1000events.Draw("AP")
metTriggerEfficiency_ff_W_enu_1000events.GetXaxis().SetTitle("MET [GeV]")
metTriggerEfficiency_ff_W_enu_1000events.GetXaxis().SetRangeUser(0, 150)
metTriggerEfficiency_ff_W_enu_1000events.GetYaxis().SetTitle("% accepted events")
metTriggerEfficiency_ff_W_enu_1000events.GetYaxis().SetTitleOffset(1.2)
metTriggerEfficiency_ff_W_enu_1000events.GetYaxis().SetRangeUser(0, 1.1)
text.Draw()
canvas.Update()
canvas.Draw()
canvas.Print("metTriggerEfficiency_ff_W_enu_1000events.svg", "svg")
canvas.Print("metTriggerEfficiency_ff_W_enu_1000events.png", "png")
canvas.Print("metTriggerEfficiency_ff_W_enu_1000events.pdf", "pdf")

canvas.SetLogx(1)
canvas.SetLogy(0)
text.SetX1NDC(0.12)
text.SetX2NDC(0.52)
efficiencyPlotWithRate_ff_W_enu_1000events = TGraphErrors(14)
for x in xrange(1, 15):
  efficiencyPlotWithRate_ff_W_enu_1000events.SetPoint(x - 1, jetToMETTriggerRate.GetY()[x], metTriggerEfficiency_ff_W_enu_1000events.GetY()[x])
  efficiencyPlotWithRate_ff_W_enu_1000events.SetPointError(x - 1, jetToMETTriggerRate.GetEY()[x], metTriggerEfficiency_ff_W_enu_1000events.GetEY()[x])
efficiencyPlotWithRate_ff_W_enu_1000events.SetTitle("ff_W_enu_1000events")
efficiencyPlotWithRate_ff_W_enu_1000events.SetName("efficiencyPlotWithRate_ff_W_enu_1000events")
efficiencyPlotWithRate_ff_W_enu_1000events.GetYaxis().SetTitle("% accepted events")
efficiencyPlotWithRate_ff_W_enu_1000events.GetYaxis().SetTitleOffset(1.2)
efficiencyPlotWithRate_ff_W_enu_1000events.GetYaxis().SetRangeUser(0, 1.1)
efficiencyPlotWithRate_ff_W_enu_1000events.SetMarkerColor(4)
efficiencyPlotWithRate_ff_W_enu_1000events.SetLineColor(1)
efficiencyPlotWithRate_ff_W_enu_1000events.SetMarkerStyle(21)
efficiencyPlotWithRate_ff_W_enu_1000events.GetXaxis().SetTitle("Rate [Hz]")
efficiencyPlotWithRate_ff_W_enu_1000events.GetXaxis().SetTitleOffset(1.2)
efficiencyPlotWithRate_ff_W_enu_1000events.Draw("AP")
efficiencyPlotWithRate_ff_W_enu_1000events.Write()
line_200kHz.Draw()
label_200kHz.Draw()
text.Draw()
canvas.Update()
canvas.Print("metEfficiencyPlotWithRate_ff_W_enu_1000events.svg", "svg")
canvas.Print("metEfficiencyPlotWithRate_ff_W_enu_1000events.png", "png")
canvas.Print("metEfficiencyPlotWithRate_ff_W_enu_1000events.pdf", "pdf")

canvas.SetLogx(0)
canvas.SetLogy(0)
text.SetX1NDC(0.5)
text.SetX2NDC(0.9)
metTriggerEfficiency_ff_W_munu_1000events = DelphesSim_ff_W_munu_1000events_efficiency_file.Get("metTriggerEfficiency_errors")
metTriggerEfficiency_ff_W_munu_1000events.SetMarkerColor(4)
metTriggerEfficiency_ff_W_munu_1000events.SetLineColor(1)
metTriggerEfficiency_ff_W_munu_1000events.SetMarkerStyle(21)
metTriggerEfficiency_ff_W_munu_1000events.Draw("AP")
metTriggerEfficiency_ff_W_munu_1000events.GetXaxis().SetTitle("MET [GeV]")
metTriggerEfficiency_ff_W_munu_1000events.GetXaxis().SetRangeUser(0, 150)
metTriggerEfficiency_ff_W_munu_1000events.GetYaxis().SetTitle("% accepted events")
metTriggerEfficiency_ff_W_munu_1000events.GetYaxis().SetTitleOffset(1.2)
metTriggerEfficiency_ff_W_munu_1000events.GetYaxis().SetRangeUser(0, 1.1)
text.Draw()
canvas.Update()
canvas.Draw()
canvas.Print("metTriggerEfficiency_ff_W_munu_1000events.svg", "svg")
canvas.Print("metTriggerEfficiency_ff_W_munu_1000events.png", "png")
canvas.Print("metTriggerEfficiency_ff_W_munu_1000events.pdf", "pdf")

canvas.SetLogx(1)
canvas.SetLogy(0)
text.SetX1NDC(0.12)
text.SetX2NDC(0.52)
efficiencyPlotWithRate_ff_W_munu_1000events = TGraphErrors(14)
for x in xrange(1, 15):
  efficiencyPlotWithRate_ff_W_munu_1000events.SetPoint(x - 1, jetToMETTriggerRate.GetY()[x], metTriggerEfficiency_ff_W_munu_1000events.GetY()[x])
  efficiencyPlotWithRate_ff_W_munu_1000events.SetPointError(x - 1, jetToMETTriggerRate.GetEY()[x], metTriggerEfficiency_ff_W_munu_1000events.GetEY()[x])
efficiencyPlotWithRate_ff_W_munu_1000events.SetTitle("ff_W_munu_1000events")
efficiencyPlotWithRate_ff_W_munu_1000events.SetName("efficiencyPlotWithRate_ff_W_munu_1000events")
efficiencyPlotWithRate_ff_W_munu_1000events.GetYaxis().SetTitle("% accepted events")
efficiencyPlotWithRate_ff_W_munu_1000events.GetYaxis().SetTitleOffset(1.2)
efficiencyPlotWithRate_ff_W_munu_1000events.GetYaxis().SetRangeUser(0, 1.1)
efficiencyPlotWithRate_ff_W_munu_1000events.SetMarkerColor(4)
efficiencyPlotWithRate_ff_W_munu_1000events.SetLineColor(1)
efficiencyPlotWithRate_ff_W_munu_1000events.SetMarkerStyle(21)
efficiencyPlotWithRate_ff_W_munu_1000events.GetXaxis().SetTitle("Rate [Hz]")
efficiencyPlotWithRate_ff_W_munu_1000events.GetXaxis().SetTitleOffset(1.2)
efficiencyPlotWithRate_ff_W_munu_1000events.Draw("AP")
efficiencyPlotWithRate_ff_W_munu_1000events.Write()
line_200kHz.Draw()
label_200kHz.Draw()
text.Draw()
canvas.Update()
canvas.Print("metEfficiencyPlotWithRate_ff_W_munu_1000events.svg", "svg")
canvas.Print("metEfficiencyPlotWithRate_ff_W_munu_1000events.png", "png")
canvas.Print("metEfficiencyPlotWithRate_ff_W_munu_1000events.pdf", "pdf")

metEfficiencyPlotWithRate = TMultiGraph("metEfficiencyPlotWithRate", "")
metEfficiencyPlotWithRate.Add(efficiencyPlotWithRate_ff_H_WW_enuenu_1000events)
efficiencyPlotWithRate_ff_H_WW_enuenu_1000events.SetMarkerColor(6)
metEfficiencyPlotWithRate.Add(efficiencyPlotWithRate_ff_H_WW_munumunu_1000events)
efficiencyPlotWithRate_ff_H_WW_munumunu_1000events.SetMarkerColor(2)
metEfficiencyPlotWithRate.Add(efficiencyPlotWithRate_ff_W_enu_1000events)
efficiencyPlotWithRate_ff_W_enu_1000events.SetMarkerColor(3)
metEfficiencyPlotWithRate.Add(efficiencyPlotWithRate_ff_W_munu_1000events)
efficiencyPlotWithRate_ff_W_munu_1000events.SetMarkerColor(4)
efficiencyPlotWithRate_ff_W_munu_1000events.SetLineColor(1)
metEfficiencyPlotWithRate.Draw("AP")
metEfficiencyPlotWithRate.GetXaxis().SetTitle("Rate [Hz]")
metEfficiencyPlotWithRate.GetXaxis().SetTitleOffset(1.2)
metEfficiencyPlotWithRate.GetYaxis().SetTitle("% accepted events")
metEfficiencyPlotWithRate.GetYaxis().SetTitleOffset(1.2)
metEfficiencyPlotWithRate.GetYaxis().SetRangeUser(0, 1.1)
line_200kHz.Draw()
label_200kHz.Draw()
metEfficiencyPlotWithRate_legend = TLegend(0.58 , 0.13, 0.9, 0.317)
metEfficiencyPlotWithRate_legend.SetHeader("Physical process")
metEfficiencyPlotWithRate_legend.AddEntry(efficiencyPlotWithRate_ff_H_WW_munumunu_1000events, "H #rightarrow WW #rightarrow #mu#nu_{#mu}#mu#nu_{#mu}", "P")
metEfficiencyPlotWithRate_legend.AddEntry(efficiencyPlotWithRate_ff_H_WW_enuenu_1000events, "H #rightarrow WW #rightarrow e#nu_{e}e#nu_{e}", "P")
metEfficiencyPlotWithRate_legend.AddEntry(efficiencyPlotWithRate_ff_W_munu_1000events, "W #rightarrow #mu#nu_{#mu}", "P")
metEfficiencyPlotWithRate_legend.AddEntry(efficiencyPlotWithRate_ff_W_enu_1000events, "W #rightarrow e#nu_{e}", "P")
metEfficiencyPlotWithRate_legend.Draw()
text.Draw()
canvas.Update()
canvas.Print("metEfficiencyPlotWithRate.svg", "svg")
canvas.Print("metEfficiencyPlotWithRate.png", "png")
canvas.Print("metEfficiencyPlotWithRate.pdf", "pdf")

canvas.SetLogx(0)
canvas.SetLogy(0)

metEfficiencyPlot = TMultiGraph("metEfficiencyPlot", "")
metEfficiencyPlot.Add(metTriggerEfficiency_ff_H_WW_enuenu_1000events)
metTriggerEfficiency_ff_H_WW_enuenu_1000events.SetMarkerColor(6)
metEfficiencyPlot.Add(metTriggerEfficiency_ff_H_WW_munumunu_1000events)
metTriggerEfficiency_ff_H_WW_munumunu_1000events.SetMarkerColor(2)
metEfficiencyPlot.Add(metTriggerEfficiency_ff_W_enu_1000events)
metTriggerEfficiency_ff_W_enu_1000events.SetMarkerColor(3)
metEfficiencyPlot.Add(metTriggerEfficiency_ff_W_munu_1000events)
metTriggerEfficiency_ff_W_munu_1000events.SetMarkerColor(4)
metTriggerEfficiency_ff_W_munu_1000events.SetLineColor(1)
metEfficiencyPlot.Draw("AP")
metEfficiencyPlot.GetXaxis().SetTitle("MET [GeV]")
metEfficiencyPlot.GetXaxis().SetRangeUser(0, 150)
metEfficiencyPlot.GetYaxis().SetTitle("% accepted events")
metEfficiencyPlot.GetYaxis().SetTitleOffset(1.2)
metEfficiencyPlot.GetYaxis().SetRangeUser(0, 1.1)
metEfficiencyPlot_legend = TLegend(0.58 , 0.6, 0.9, 0.8)
metEfficiencyPlot_legend.SetHeader("Physical process")
metEfficiencyPlot_legend.AddEntry(metTriggerEfficiency_ff_H_WW_munumunu_1000events, "H #rightarrow WW #rightarrow #mu#nu_{#mu}#mu#nu_{#mu}", "P")
metEfficiencyPlot_legend.AddEntry(metTriggerEfficiency_ff_H_WW_enuenu_1000events, "H #rightarrow WW #rightarrow e#nu_{e}e#nu_{e}", "P")
metEfficiencyPlot_legend.AddEntry(metTriggerEfficiency_ff_W_munu_1000events, "W #rightarrow #mu#nu_{#mu}", "P")
metEfficiencyPlot_legend.AddEntry(metTriggerEfficiency_ff_W_enu_1000events, "W #rightarrow e#nu_{e}", "P")
metEfficiencyPlot_legend.Draw()
text.SetX1NDC(0.5)
text.SetX2NDC(0.9)
text.Draw()
canvas.Update()
canvas.Print("metEfficiencyPlot.svg", "svg")
canvas.Print("metEfficiencyPlot.png", "png")
canvas.Print("metEfficiencyPlot.pdf", "pdf")

metEfficiencyFile.Write()
metEfficiencyFile.Close()